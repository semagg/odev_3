/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package odev3;
import spark.ModelAndView;
import spark.template.mustache.MustacheTemplateEngine;
import static spark.Spark.get;
import static spark.Spark.post;
import static spark.Spark.port;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {

        System.out.println(new App().getGreeting());
        //Logger logger = LogManager.getLogger(App.class);
        //logger.error("hata");
        get("/", (req, res) -> "Hello, World");

        get("/compute",
        (rq, rs) -> {
        Map<String, String> map = new HashMap<String, String>();
        map.put("result", "not computed yet!");
        return new ModelAndView(map, "compute.mustache");
        },
        new MustacheTemplateEngine());

        post("/compute", (req, res) -> {
            //System.out.println(req.queryParams("input1"));
            //System.out.println(req.queryParams("input2"));
            String input1 = req.queryParams("input1");
            java.util.Scanner sc1 = new java.util.Scanner(input1);
            sc1.useDelimiter("[;\r\n]+");
            int[]list=new int[7];
            while (sc1.hasNext())
            {
            for (int i=0;i<list.length;i++){
                list[i]=Integer.parseInt(sc1.next().replaceAll("\\s",""));
            }
            }
            sc1.close();
            
            String input2 = req.queryParams("input2").replaceAll("\\s","");
            int input2AsInt = Integer.parseInt(input2);
            boolean result = App.ciftSayibulma(list, input2AsInt);
            Map<String, Boolean> map = new HashMap<String, Boolean>();
            map.put("result", result);
            return new ModelAndView(map, "compute.mustache");
            },
             new MustacheTemplateEngine());
        }
    
            public static boolean ciftSayibulma(int array[],int e) {    
                if(array==null) return false;                
                int sayac=0;            
                for (int i = 0; i < array.length; i++){          
                          if (array[i]%2 == 0) {            
                            sayac +=1;           
                          }
                }
                             if (sayac==e) return true;
                             
                                      
                                 else  return false;       
                        }
                    
                }

              
                                
